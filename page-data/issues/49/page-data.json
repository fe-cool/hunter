{
    "componentChunkName": "component---src-templates-issues-tsx",
    "path": "/issues/49",
    "result": {"data":{"issuesJson":{"id":"ac0c6ac6-44dc-5881-9cc7-aa332225813b","title":"实现字符串reverse方法","number":49,"bodyHTML":"\n<h3 dir=\"auto\">要实现的功能</h3>\n\n<p dir=\"auto\">在 JS 中反转一个字符串，你有几种方法？</p>\n<h3 dir=\"auto\">代码示例</h3>\n\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"function reverseStr(str: string): string {\n  // ...实现\n}\n\n// 输入字符串: 'Hello World!'\nreverseStr('Hello World!')\n// 输出: '!dlroW olleH'\"><pre class=\"notranslate\"><span class=\"pl-k\">function</span> <span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span>: <span class=\"pl-s1\">string</span><span class=\"pl-kos\">)</span>: <span class=\"pl-s1\">string</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// ...实现</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-c\">// 输入字符串: 'Hello World!'</span>\n<span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Hello World!'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-c\">// 输出: '!dlroW olleH'</span></pre></div>\n<h3 dir=\"auto\">最佳答案评选标准</h3>\n \n<ol dir=\"auto\">\n<li>请写出实现思路、代码，并为代码的关键步骤增写注释</li>\n<li>不需要考虑异常发生</li>\n<li>附带测试用例、多种实现方式是加分项</li>\n<li>不过度设计，代码简洁优雅是加分项</li>\n</ol>\n<h2 dir=\"auto\">最佳答案</h2>\n<p dir=\"auto\"><a href=\"https://github.com/BetaSu/fe-hunter/issues/49#issuecomment-1090972161\" data-hovercard-type=\"issue\" data-hovercard-url=\"/BetaSu/fe-hunter/issues/49/hovercard\">virgo569157的回答</a></p>\n<h3 dir=\"auto\">答题同学须知</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">答题规范：请在<code class=\"notranslate\">一次评论</code>中完成作答，后续修改也请编辑该评论，而不是追加新的评论</p>\n</li>\n<li>\n<p dir=\"auto\">评选标准：最佳答案由<code class=\"notranslate\">围观同学</code>的 <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji> 和<a href=\"https://github.com/BetaSu\">卡颂</a>共同决定</p>\n</li>\n<li>\n<p dir=\"auto\">评选时间：一般是问题发布24小时后评选，如果问题发布当天回答数较少，问题悬赏金额可能增加，同时悬赏时间也会增加</p>\n</li>\n</ul>\n<h3 dir=\"auto\">围观同学须知</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">对于你满意的答案，请不要吝惜你的 <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">👍</g-emoji>，这是评选<strong>最佳答案</strong>的依据</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">非答题的评论</code>会被删除，问题相关讨论请在<a href=\"https://github.com/BetaSu/fe-hunter\">赏金猎人群</a>中进行</p>\n</li>\n</ul>","updatedAt":"2022-04-12T02:04:48Z","upvoteCount":null,"author":{"login":"BetaSu","avatarUrl":"https://avatars.githubusercontent.com/u/15828041?u=3b08cdf9f9b49dbead9ffb020a94d925904d2b74&v=4","url":"https://github.com/BetaSu"},"category":null,"labels":{"edges":[{"node":{"name":"JS","color":"ffee58"}},{"node":{"name":"动手","color":"42a5f5"}}]},"comments":{"edges":[{"node":{"id":"IC_kwDOHCfdf85BBuoB","bodyHTML":"<p dir=\"auto\">方法一：利用数组和字符串原型上的属性就能实现：</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const reverseStr = str  =&gt;  str.split('').reverse().join('');\n\nreverseStr('Hello World!')\n// 输出: '!dlroW olleH'\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">reverseStr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">str</span>  <span class=\"pl-c1\">=&gt;</span>  <span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">split</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reverse</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Hello World!'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-c\">// 输出: '!dlroW olleH'</span></pre></div>\n<p dir=\"auto\">方法二：使用递归和字符串截取也能实现：</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const reverseStr = str =&gt; str === &quot;&quot; ? &quot;&quot; : reverseStr(str.substr(1)) + str.charAt(0)\nreverseStr('Hello World!')\n// 输出: '!dlroW olleH'\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">reverseStr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">str</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">str</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">\"\"</span> ? <span class=\"pl-s\">\"\"</span> : <span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">substr</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">charAt</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Hello World!'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-c\">// 输出: '!dlroW olleH'</span></pre></div>\n<p dir=\"auto\">方法三：使用for循环遍历：</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const reverseStr = str =&gt; {\n    let resultStr = &quot;&quot;;\n    for (let i = str.length - 1; i &gt;= 0; i--) {\n        resultStr += str[i];\n    }\n    return resultStr;\n}\nreverseStr('Hello World!')\n// 输出: '!dlroW olleH'\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">reverseStr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">str</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">let</span> <span class=\"pl-s1\">resultStr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"\"</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-k\">for</span> <span class=\"pl-kos\">(</span><span class=\"pl-k\">let</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span> <span class=\"pl-c1\">-</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">&gt;=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">--</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-s1\">resultStr</span> <span class=\"pl-c1\">+=</span> <span class=\"pl-s1\">str</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-kos\">}</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">resultStr</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Hello World!'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-c\">// 输出: '!dlroW olleH'</span></pre></div>","author":{"login":"xianguoGou","avatarUrl":"https://avatars.githubusercontent.com/u/56954233?u=d8c770f0bab1fc1a41454aa7c411e189a3c0ced8&v=4","url":"https://github.com/xianguoGou"},"replies":null}},{"node":{"id":"IC_kwDOHCfdf85BBv4x","bodyHTML":"<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"function reverseStr(str) {\n  let left = 0;\n  let right = str.length - 1;\n  let strArr = str.split('');\n  while(left &lt; right) {\n    [strArr[left], strArr[right]] = [strArr[right], strArr[left]];\n    left++;\n    right--;\n  }\n  return strArr.join('');\n}\n\n// 输入字符串: 'Hello World!'\nlet res = reverseStr('Hello World!')\nconsole.log(res);\n// 输出: '!dlroW olleH'\n\nlet res1 = reverseStr('Hello World!~')\nconsole.log(res1);\n// 输出: '~!dlroW olleH'\"><pre class=\"notranslate\"><code class=\"notranslate\">function reverseStr(str) {\n  let left = 0;\n  let right = str.length - 1;\n  let strArr = str.split('');\n  while(left &lt; right) {\n    [strArr[left], strArr[right]] = [strArr[right], strArr[left]];\n    left++;\n    right--;\n  }\n  return strArr.join('');\n}\n\n// 输入字符串: 'Hello World!'\nlet res = reverseStr('Hello World!')\nconsole.log(res);\n// 输出: '!dlroW olleH'\n\nlet res1 = reverseStr('Hello World!~')\nconsole.log(res1);\n// 输出: '~!dlroW olleH'\n</code></pre></div>","author":{"login":"wolfdu","avatarUrl":"https://avatars.githubusercontent.com/u/22972582?u=0a42ac71242d509de8fd1ea61430d412b3f87c84&v=4","url":"https://github.com/wolfdu"},"replies":null}},{"node":{"id":"IC_kwDOHCfdf85BB9oT","bodyHTML":"<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const reverseStr = (str) =&gt;\n  str.length === 0 ? &quot;&quot; : reverseStr(str.slice(1)) + str.charAt(0);\nconsole.log(reverseStr(&quot;Hello World!&quot;));\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">reverseStr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span>\n  <span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span> <span class=\"pl-c1\">===</span> <span class=\"pl-c1\">0</span> ? <span class=\"pl-s\">\"\"</span> : <span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">slice</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">charAt</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"Hello World!\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>","author":{"login":"fxwing","avatarUrl":"https://avatars.githubusercontent.com/u/32068860?u=77df1f2776ae063e0d954db1e4600bf83afcb5ea&v=4","url":"https://github.com/fxwing"},"replies":null}},{"node":{"id":"IC_kwDOHCfdf85BB-Lg","bodyHTML":"<p dir=\"auto\">参考以上，加上Unicode支持</p>\n<ul dir=\"auto\">\n<li>Array.prototype.reverse</li>\n</ul>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"function reverseStr(str) {\n  return Array.from(str).reverse().join('')\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">function</span> <span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-v\">Array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">from</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reverse</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<ul dir=\"auto\">\n<li>循环</li>\n</ul>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"function reverseStr(str) {\n  let result = ''\n  for (let name of str) {\n    result = name + result\n  }\n  return result\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">function</span> <span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">''</span>\n  <span class=\"pl-k\">for</span> <span class=\"pl-kos\">(</span><span class=\"pl-k\">let</span> <span class=\"pl-s1\">name</span> <span class=\"pl-k\">of</span> <span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">result</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">name</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">result</span>\n  <span class=\"pl-kos\">}</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-s1\">result</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<ul dir=\"auto\">\n<li>双指针</li>\n</ul>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"function reverseStr(str) {\n  const strArr = Array.from(str)\n  let left = 0, right = strArr.length - 1\n  while(left &lt; right) {\n    [strArr[left], strArr[right]] = [strArr[right], strArr[left]]\n    left++\n    right--\n  }\n  return strArr.join('')\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">function</span> <span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">strArr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">from</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-k\">let</span> <span class=\"pl-s1\">left</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">right</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">strArr</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span> <span class=\"pl-c1\">-</span> <span class=\"pl-c1\">1</span>\n  <span class=\"pl-k\">while</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">left</span> <span class=\"pl-c1\">&lt;</span> <span class=\"pl-s1\">right</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-kos\">[</span><span class=\"pl-s1\">strArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">left</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">strArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">right</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">strArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">right</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">strArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">left</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span>\n    <span class=\"pl-s1\">left</span><span class=\"pl-c1\">++</span>\n    <span class=\"pl-s1\">right</span><span class=\"pl-c1\">--</span>\n  <span class=\"pl-kos\">}</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-s1\">strArr</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span></pre></div>","author":{"login":"canvascat","avatarUrl":"https://avatars.githubusercontent.com/u/31235016?u=be9fd33efe48f4ca9d5e3d685f2c720937bcb9ab&v=4","url":"https://github.com/canvascat"},"replies":null}},{"node":{"id":"IC_kwDOHCfdf85BDQD_","bodyHTML":"<ol dir=\"auto\">\n<li>\n<p dir=\"auto\">使用内置方法反转字符串<br>\nfunction reverseString(str) {<br>\nreturn str.split('').reverse().join('');<br>\n}<br>\nreverseString('hello');</p>\n</li>\n<li>\n<p dir=\"auto\">用递减的 for 循环反转字符串<br>\nfunction reverseString(str) {<br>\n// Step 1. 创建一个空字符串，用来存储后面新创建的字符串<br>\nvar newString = '';</p>\n<p dir=\"auto\">// Step 2.创建for循环<br>\n/* 循环的起点是（str.length-1），它对应于<br>\n字符串的最后一个字符“o”<br>\n只要i大于或等于0，循环就会继续<br>\n每次迭代后递减i <em>/<br>\nfor (var i = str.length - 1; i &gt;= 0; i--) {<br>\nnewString += str[i]; // or newString = newString + str[i];<br>\n}<br>\n/</em> \"hello\"的length等于 5<br>\n每次循环的公式: i = str.length - 1 and newString = newString + str[i]<br>\n第一次循环:   i = 5 - 1 = 4,         newString = \"\" + \"o\" = \"o\"<br>\n第二次循环:   i = 4 - 1 = 3,         newString = \"o\" + \"l\" = \"ol\"<br>\n第三次循环:   i = 3 - 1 = 2,         newString = \"ol\" + \"l\" = \"oll\"<br>\n第四次循环:   i = 2 - 1 = 1,         newString = \"oll\" + \"e\" = \"olle\"<br>\n第五次循环:   i = 1 - 1 = 0,         newString = \"olle\" + \"h\" = \"olleh\"<br>\n结束for循环*/</p>\n<p dir=\"auto\">// Step 3. 返回已翻转的字符串<br>\nreturn newString; // \"olleh\"<br>\n}</p>\n</li>\n</ol>\n<p dir=\"auto\">reverseString('hello');</p>\n<ol start=\"3\" dir=\"auto\">\n<li>用递归反转字符串<br>\nfunction reverseString(str) {<br>\nreturn str === '' ? '' : reverseString(str.substr(1)) + str.charAt(0);<br>\n}<br>\nreverseString('hello');</li>\n</ol>","author":{"login":"carl-zp","avatarUrl":"https://avatars.githubusercontent.com/u/48471813?u=7776367665bc9d25b354d985ab0798e1f8ac8e13&v=4","url":"https://github.com/carl-zp"},"replies":null}},{"node":{"id":"IC_kwDOHCfdf85BJlSN","bodyHTML":"<p dir=\"auto\">使用<code class=\"notranslate\">Array#reduce()</code>方法</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"function reverseStr(str: string): string {\n  return Array.from(str).reduce((a,b)=&gt;b+a)\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">function</span> <span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span>: <span class=\"pl-smi\">string</span><span class=\"pl-kos\">)</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Array</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">from</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reduce</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">a</span><span class=\"pl-kos\">,</span><span class=\"pl-s1\">b</span><span class=\"pl-kos\">)</span><span class=\"pl-c1\">=&gt;</span><span class=\"pl-s1\">b</span><span class=\"pl-c1\">+</span><span class=\"pl-s1\">a</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span></pre></div>","author":{"login":"RandyForest","avatarUrl":"https://avatars.githubusercontent.com/u/42714646?v=4","url":"https://github.com/RandyForest"},"replies":null}},{"node":{"id":"IC_kwDOHCfdf85BSKSJ","bodyHTML":"<h2 dir=\"auto\">反转字符串</h2>\n<h3 dir=\"auto\">一、数组反转</h3>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const reverseStr = str =&gt; str.split('').reverse().join('')\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">reverseStr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">str</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">split</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reverse</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span></pre></div>\n<h3 dir=\"auto\">二、递归</h3>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const reverseStr = (str) =&gt; (str !== '' ? reverseStr(str.substr(1)) + str.charAt(0) : '')\n\nconsole.log(reverseStr('hello, world !')) // ! dlrow ,olleh\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-en\">reverseStr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span> <span class=\"pl-c1\">!==</span> <span class=\"pl-s\">''</span> ? <span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">substr</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">+</span> <span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">charAt</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span> : <span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'hello, world !'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// ! dlrow ,olleh</span></pre></div>\n<h3 dir=\"auto\">三、循环遍历</h3>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"function test02() {\n  const reverseStr = (str) =&gt; {\n    let resultStr = ''\n    for (let i = str.length - 1; i &gt;= 0; i--) {\n      resultStr += str[i]\n    }\n    return resultStr\n  }\n  console.log(reverseStr('hello, world !'))\n}\ntest02()\"><pre class=\"notranslate\"><span class=\"pl-k\">function</span> <span class=\"pl-en\">test02</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-en\">reverseStr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">let</span> <span class=\"pl-s1\">resultStr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">''</span>\n    <span class=\"pl-k\">for</span> <span class=\"pl-kos\">(</span><span class=\"pl-k\">let</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span> <span class=\"pl-c1\">-</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span> <span class=\"pl-c1\">&gt;=</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">;</span> <span class=\"pl-s1\">i</span><span class=\"pl-c1\">--</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">resultStr</span> <span class=\"pl-c1\">+=</span> <span class=\"pl-s1\">str</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">i</span><span class=\"pl-kos\">]</span>\n    <span class=\"pl-kos\">}</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">resultStr</span>\n  <span class=\"pl-kos\">}</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'hello, world !'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-en\">test02</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div>\n<h3 dir=\"auto\">四、双指针</h3>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  const reverseStr = (str) =&gt; {\n    const strArr = str.split('')\n    let left = 0\n    let right = strArr.length - 1\n    while (left &lt; right) {\n      ;[strArr[left], strArr[right]] = [strArr[right], strArr[left]]\n      left++, right--\n    }\n    return strArr.join('')\n  }\"><pre class=\"notranslate\">  <span class=\"pl-k\">const</span> <span class=\"pl-en\">reverseStr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">strArr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">split</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-k\">let</span> <span class=\"pl-s1\">left</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>\n    <span class=\"pl-k\">let</span> <span class=\"pl-s1\">right</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">strArr</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span> <span class=\"pl-c1\">-</span> <span class=\"pl-c1\">1</span>\n    <span class=\"pl-k\">while</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">left</span> <span class=\"pl-c1\">&lt;</span> <span class=\"pl-s1\">right</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-kos\">;</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">strArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">left</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">strArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">right</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-s1\">strArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">right</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">strArr</span><span class=\"pl-kos\">[</span><span class=\"pl-s1\">left</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span>\n      <span class=\"pl-s1\">left</span><span class=\"pl-c1\">++</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">right</span><span class=\"pl-c1\">--</span>\n    <span class=\"pl-kos\">}</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">strArr</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-kos\">}</span></pre></div>\n<h3 dir=\"auto\">五、使用栈</h3>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"  const reverseStr = (str) =&gt; {\n    const stk = []\n    str.split('').forEach((c) =&gt; stk.push(c))\n    let res = ''\n    while (stk.length) {\n      res += stk.pop()\n    }\n    return res\n  }\n  \n  console.log(reverseStr('hello')) // olleh\"><pre class=\"notranslate\">  <span class=\"pl-k\">const</span> <span class=\"pl-en\">reverseStr</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">str</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">stk</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span>\n    <span class=\"pl-s1\">str</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">split</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">''</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">forEach</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">c</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-s1\">stk</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">push</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">c</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-k\">let</span> <span class=\"pl-s1\">res</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">''</span>\n    <span class=\"pl-k\">while</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">stk</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">length</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n      <span class=\"pl-s1\">res</span> <span class=\"pl-c1\">+=</span> <span class=\"pl-s1\">stk</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">pop</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-kos\">}</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-s1\">res</span>\n  <span class=\"pl-kos\">}</span>\n  \n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">reverseStr</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'hello'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// olleh</span></pre></div>","author":{"login":"RJM1996","avatarUrl":"https://avatars.githubusercontent.com/u/33800707?u=10830efddf4f630f3ea3d4b89d34130f05cfb835&v=4","url":"https://github.com/RJM1996"},"replies":null}}]}}},"pageContext":{"number":49,"previous":{"title":"要入职外包吗？","number":48},"next":{"title":"实现相对完备的深拷贝方法","number":53}}},
    "staticQueryHashes": ["151096407","2861350382"]}